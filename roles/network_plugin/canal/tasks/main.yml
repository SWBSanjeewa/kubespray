---

- name: Canal | Create addon dir
  file:
    path: "{{ kube_config_dir }}/addons/canal"
    state: directory
    owner: root
    group: root
    mode: 0755
  when:
    - inventory_hostname == groups['kube-master'][0]

- name: Canal | Create canal certs directory
  file:
    dest: "{{ canal_cert_dir }}"
    state: directory
    mode: 0750
    owner: root
    group: root

- name: Canal | Link etcd certificates for canal-node
  file:
    src: "{{ etcd_cert_dir }}/{{ item.s }}"
    dest: "{{ canal_cert_dir }}/{{ item.d }}"
    state: hard
    force: yes
  with_items:
    - {s: "{{ kube_etcd_cacert_file }}", d: "ca_cert.crt"}
    - {s: "{{ kube_etcd_cert_file }}", d: "cert.crt"}
    - {s: "{{ kube_etcd_key_file }}", d: "key.pem"}


- name: Canal | Templates list
  set_fact:
     canal_templates:
      - { name: canal, file: canal.yaml }


- name: Canal | Create manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/addons/canal/{{ item.file }}"
  with_items: "{{ canal_templates }}"
  register: canal_manifests
  when:
    - inventory_hostname == groups['kube-master'][0]

- name: Canal | Apply manifests
  kube:
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ kube_config_dir }}/addons/canal/{{ item.item.file }}"
    state: "latest"
  with_items: "{{ canal_manifests.results }}"
  when:
    - inventory_hostname == groups['kube-master'][0]
    
- name: Canal | Create network policy directory
  file:
    path: "{{ canal_policy_dir }}"
    state: directory